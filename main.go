package main

import (
	"fmt"
	"sync"
	"time"
)

func arrSample() []int {
	arr := []int{999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999, 999999, 999999., 999999, 999999, 999999., 999999, 99999999}
	return arr
}

func versionWithoutGoroutine() {
	// version 1
	start := time.Now()
	arr := arrSample()
	sum := 0
	for i := range arr {
		val := getSumWithoutGoroutine(arr[i])
		sum = sum + val
	}
	fmt.Printf("%v ::- %d \n", time.Since(start), sum)
}

func versionWithGoroutine() {
	// version 2
	start := time.Now()
	var wg sync.WaitGroup
	arr := arrSample()
	sum := 0
	len := len(arr)
	ch := make(chan int)
	for i := range arr {
		wg.Add(1)
		go getSumWithGoroutine(arr[i], ch, &wg)
	}
	for i := 0; i < len; i++ {
		val := <-ch
		sum = sum + val
	}
	wg.Wait()
	close(ch)
	fmt.Printf("%v ::- %d \n", time.Since(start), sum)
}

func main() {
	println("Starting main")
	for i := 0; i < 10; i++ {
		// versionWithoutGoroutine() // version 1 without Goroutines
		versionWithGoroutine() // version 2 with Goroutines
	}
}

func getSumWithGoroutine(num int, ch chan int, wg *sync.WaitGroup) {
	sum := 0
	for i := 1; i <= num; i++ {
		sum = sum + i
	}
	ch <- sum
	wg.Done()
}

func getSumWithoutGoroutine(num int) int {
	sum := 0
	for i := 1; i <= num; i++ {
		sum = sum + i
	}
	return sum
}
